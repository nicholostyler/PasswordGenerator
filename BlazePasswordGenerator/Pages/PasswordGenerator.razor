@using BlazePasswordGenerator.Helpers
<div class="container">
	<h2>Password Generator</h2>
	<div class="result-container">
		<span id="result">@generatedPassword</span>
		<button class="btn" id="clipboard">
			<i class="far fa-clipboard"></i>
		</button>
	</div>
	<div class="settings">
		<div class="setting">
			<label>Password length</label>
			<input type="number" id="length" max='20' @bind="passwordInput" />
		</div>
		<div class="setting">
			<label>Include uppercase letters</label> 
			<input type="checkbox" id="uppercase" @bind="includeUpper" />
		</div>

		<div class="setting">
			<label>Include numbers</label> 
			<input type="checkbox" id="numbers" @bind="includeNumbers" />
		</div>
		<div class="setting">
			<label>Include symbols</label> 
			<input type="checkbox" id="symbols" @bind="includeSymbols" />
		</div>
	</div>
	<button class="btn btn-large" id="generate" @onclick="GeneratePassword">
		Generate password
	</button>
</div>

@code {
	string generatedPassword = string.Empty;
	string passwordInput = string.Empty;
	bool includeUpper = false;
	//bool includeLower = false;
	bool includeNumbers = false;
	bool includeSymbols = false;
	RandomHelper helper = new RandomHelper();

	private void GeneratePassword()
	{
		generatedPassword = string.Empty;
		List<string> filters = new List<string>();
		int passwordLength = Convert.ToInt32(passwordInput);

		filters.Add("lower");

		if (includeUpper)
		{
			filters.Add("upper");
		}
		if (includeNumbers)
		{
			filters.Add("numbers");
		}
		if (includeSymbols)
		{
			filters.Add("symbols");
		}

		generatedPassword = helper.GeneratePassword(filters, passwordLength);

	}
}
